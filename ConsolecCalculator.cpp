/* це підключення бібліотеки
заголовного файлу, яка дозволяє працювати з об'єктами введення та
виведення, такими як cout*/

#include <iostream>


/*це підключення бібліотеки, яка дозваляє отримати дискриптор консолі */

#include<Windows.h>


/* використання простору імен std означає, що ми можемо
використовувати імена для об'єктів та змінних зі стандартної бібліотеки. */

using namespace std;


/*викликаемо дискриптор консолі він, дозволяє працювати з кольорами консолі, положенням курсора у консолі
зміною заголовка*/

HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);


/* Це називається функцією, у нашому випадку це головна (main) функція
програми всередині фігурних дужок {} – тіло функції. */

int main()
{

    /*змінюємо колір тексту за допомогою методу SetConsoleTextAttribute Windows API для встановлення кольорів,
    0-це код чорного кольору*/

    SetConsoleTextAttribute(console, 0);


    /*змінюємо колір тексту за допомогою команди system("color F0"), F0 - код білого кольору  */

    system("color F0");


    /*змінюємо заголовок консолі за допомогою функції SetConsoleTitle, литеральний префікс L вказує
    символьний тип, «широкий символ», wchar_t */
    SetConsoleTitle(L"My first program");


    /*Змінюємо стандартний "Hallo world!" на "Hi User" виводимо данні в консоль програми за
    допомогою стандартного об'єкту cout << , \n означає що курсор буде перекинуто на наступну строку
    консолі*/

    cout << "Hi User\n";


    /*виводимо ще один текст */

    cout << "I`m learning c++\n";



    /*пишемо перший калькулятор */

    cout << "I think it's a calculator. And it looks like it's working!\n";


    /* ініціація змінних типу double для вводу числових даних с плаваючою комою з десятковими знаками,
    a - для першого числа
    b - для другого
    d - змінна в яку буде записуватися результат обчислення змінних a та b
    */

    double a, b, d;


    /* змінна типу char для введення символів в нашому випадку "+", "-", "*" , "/" */

    char c;



    /*запитуємо у користувача перше число */

    cout << "enter some number \n";



    /*Отримуємо у користувача перше число за допомогою об'єкту cin >>
    він дозволяє вводити дані у консолі */

    cin >> a;



    /*просимо користувача ввести символ бажаної математичної операції ' + ', ' - ', ' * ', ' / ' */

    cout << "choose your destiny! Just kidding, just enter ' + ', ' - ', ' * ', ' / ' and it will calculate everything itself \n";



    /*отримаємо цей символ за допомогою все того ж  cin >> */

    cin >> c;


    /*створення локальних констант за допомогою згрупованого набору цілих констант enum с,
    sum = '+'    - цілим числом закодовано 43 код символу +
    min = '-'    - цілим числом закодовано 45 код символу -
    mult = '*'   - цілим числом закодовано 42 код символу *
    div = '/     - цілим числом закодовано 47 код символу /
    для змінної  "char c" , для кожного введеного користувачем символу дії буде написано свій блок коду */

    enum c { sum = '+', min = '-', mult = '*', div = '/' };


    /*запитуємо у користувача друге число */

    cout << "enter some else number\n";


    /*Отримуємо у користувача друге число*/

    cin >> b;


    /*оператор switch передає управління одному з блоків коду у своєму тілі
    в залежності від значення,значення повинно мати цілісний тип або бути типом класу,
    який має однозначне перетворення на цілісний тип, (с) означае що ми будемо порівнювати
    з змінною "char c", якщо значення збігаються то буде виконано блок коду написаного для кожної операції
    */

    switch (c)
    {

        /*оператор case порівнює значення sum з значенням "char c", якщо було введено "+"
        буде виконано блок коду написаного для обчислення суми  */

    case sum:

        d = a + b;

        cout << d << "\t result\n";


        /*break завершує роботу цього блоку коду*/

        break;


        /*case порівнює значення min з значенням "char c", якщо було введено "-"
            буде виконано блок коду написаного для обчислення віднімання */

    case min:
        d = a - b;

        cout << d << "\t result\n";

        break;


        /*case порівнює значення min з значенням "char c", якщо було введено "*"
            буде виконано блок коду написаного для обчислення множення  */
    case mult:

        d = a * b;

        cout << d << "\t result\n";

        break;


        /*case порівнює значення min з значенням "char c", якщо було введено "/"
            буде виконано блок коду написаного для обчислення ділення  */
    case div:
        d = a / b;

        cout << d << "\t result\n";

        break;

    }


    /*системний виклик команди pause, яка чекає на будь-яке введення*/

    system("pause");


    /*return 0 - повернення коду завершення нуль. Якщо main оголошена як int main ()
    вона має повертати значення: 0 - при успішному завершенні, інші  значення  у разі помилки.*/

    return 0;

}
